## Canvas WebSocket API V2 - Workspace Operations

### Subscribing to a Workspace

```javascript
// Subscribe to workspace events
socket.emit('workspace:subscribe', 'workspaceId', (response) => {
  if (response.success) {
    console.log('Subscribed to workspace', response.data);
  } else {
    console.error('Failed to subscribe to workspace', response.error);
  }
});
```

### Unsubscribing from a Workspace

```javascript
// Unsubscribe from workspace events
socket.emit('workspace:unsubscribe', 'workspaceId', (response) => {
  if (response.success) {
    console.log('Unsubscribed from workspace');
  } else {
    console.error('Failed to unsubscribe from workspace', response.error);
  }
});
```

### Getting Workspace Tree

```javascript
// Get workspace tree structure
socket.emit('workspace:tree:get', 'workspaceId', (response) => {
  if (response.success) {
    console.log('Workspace tree', response.data.tree);
  } else {
    console.error('Failed to get workspace tree', response.error);
  }
});
```

### Getting Workspace Paths

```javascript
// Get workspace paths
socket.emit('workspace:tree:paths', 'workspaceId', (response) => {
  if (response.success) {
    console.log('Workspace paths', response.data.paths);
  } else {
    console.error('Failed to get workspace paths', response.error);
  }
});
```

### Workspace Events

After subscribing to a workspace, you will receive events when changes occur:

#### Tree Updates

```javascript
// Listen for tree structure updates
socket.on('workspace:workspace:tree:updated', (data) => {
  console.log('Workspace tree updated', data);
  // Update UI with new tree structure: data.data.tree
});
```

#### Layer Events

```javascript
// Listen for layer creation events
socket.on('workspace:workspace:layer:created', (data) => {
  console.log('Layer created', data);
});

// Listen for layer update events
socket.on('workspace:workspace:layer:updated', (data) => {
  console.log('Layer updated', data);
});

// Listen for layer rename events
socket.on('workspace:workspace:layer:renamed', (data) => {
  console.log('Layer renamed', data);
});

// Listen for layer deletion events
socket.on('workspace:workspace:layer:deleted', (data) => {
  console.log('Layer deleted', data);
});
```

#### Workspace Status Changes

```javascript
// Listen for workspace status changes
socket.on('workspace:workspace:status:changed', (data) => {
  console.log('Workspace status changed', data);
});

// Listen for workspace color changes
socket.on('workspace:workspace:color:changed', (data) => {
  console.log('Workspace color changed', data);
});

// Listen for workspace description changes
socket.on('workspace:workspace:description:changed', (data) => {
  console.log('Workspace description changed', data);
});

// Listen for workspace label changes
socket.on('workspace:workspace:label:changed', (data) => {
  console.log('Workspace label changed', data);
});

// Listen for workspace lock events
socket.on('workspace:workspace:locked', (data) => {
  console.log('Workspace locked', data);
});

// Listen for workspace unlock events
socket.on('workspace:workspace:unlocked', (data) => {
  console.log('Workspace unlocked', data);
});

// Listen for workspace config changes
socket.on('workspace:workspace:config:changed', (data) => {
  console.log('Workspace config changed', data);
});
```
